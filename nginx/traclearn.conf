# TracLearn Nginx Configuration
# Routes requests between Trac (Python 2.7) and TracLearn API (Python 3.11)

# Upstream definition for TracLearn API service (Python 3.11)
upstream traclearn_api {
    server localhost:8000;
    keepalive 32;
}

# Upstream definition for Trac service (Python 2.7)
upstream trac_service {
    server localhost:8080;  # Adjust port as needed for your Trac instance
    keepalive 16;
}

server {
    listen 80;
    server_name localhost;  # Change to your domain
    
    # Increase body size for file uploads
    client_max_body_size 10M;
    
    # Logging
    access_log /var/log/nginx/traclearn_access.log;
    error_log /var/log/nginx/traclearn_error.log;
    
    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # TracLearn API routes (Python 3.11 FastAPI)
    location /api/v1/ {
        proxy_pass http://traclearn_api/api/v1/;
        proxy_http_version 1.1;
        
        # Headers for proper proxying
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Connection settings
        proxy_set_header Connection "";
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # CORS headers for API
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        add_header 'Access-Control-Max-Age' '3600' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    # WebSocket support for real-time features
    location /ws/ {
        proxy_pass http://traclearn_api/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # TracLearn static assets
    location /traclearn/chrome/ {
        alias /path/to/trac/env/htdocs/traclearn/;
        expires 7d;
        add_header Cache-Control "public, immutable";
    }
    
    # TracLearn-specific Trac routes
    location /traclearn/ {
        proxy_pass http://trac_service/traclearn/;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Preserve Trac authentication headers
        proxy_pass_header Authorization;
        proxy_pass_header Cookie;
        proxy_pass_header Set-Cookie;
    }
    
    # Default Trac routes
    location / {
        proxy_pass http://trac_service/;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Preserve Trac authentication
        proxy_pass_header Authorization;
        proxy_pass_header Cookie;
        proxy_pass_header Set-Cookie;
    }
    
    # Health check endpoints
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    location /api/health {
        proxy_pass http://traclearn_api/health;
        access_log off;
    }
}

# HTTPS configuration (uncomment and configure for production)
# server {
#     listen 443 ssl http2;
#     server_name localhost;
#     
#     ssl_certificate /path/to/cert.pem;
#     ssl_certificate_key /path/to/key.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     
#     # Include all location blocks from above
# }