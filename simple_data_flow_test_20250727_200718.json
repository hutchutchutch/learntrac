{
  "timestamp": "2025-07-27T20:07:12.919619",
  "database_connectivity": true,
  "schema_validation": {
    "required_tables_exist": true,
    "foreign_keys_valid": true,
    "column_types_correct": true,
    "validation_details": {
      "learning.paths": {
        "exists": true,
        "expected_columns": [
          "id",
          "title",
          "cognito_user_id",
          "created_at",
          "total_chunks",
          "question_difficulty"
        ],
        "actual_columns": [
          "id",
          "title",
          "query_text",
          "cognito_user_id",
          "created_at",
          "total_chunks",
          "question_difficulty"
        ],
        "missing_columns": []
      },
      "learning.concept_metadata": {
        "exists": true,
        "expected_columns": [
          "ticket_id",
          "path_id",
          "chunk_id",
          "relevance_score",
          "question_generated"
        ],
        "actual_columns": [
          "ticket_id",
          "path_id",
          "chunk_id",
          "relevance_score",
          "question_generated",
          "created_at"
        ],
        "missing_columns": []
      },
      "learning.prerequisites": {
        "exists": true,
        "expected_columns": [
          "concept_ticket_id",
          "prerequisite_ticket_id",
          "created_at"
        ],
        "actual_columns": [
          "concept_ticket_id",
          "prerequisite_ticket_id",
          "created_at"
        ],
        "missing_columns": []
      },
      "learning.progress": {
        "exists": true,
        "expected_columns": [
          "cognito_user_id",
          "ticket_id",
          "status",
          "time_spent_minutes"
        ],
        "actual_columns": [
          "cognito_user_id",
          "ticket_id",
          "status",
          "started_at",
          "last_accessed",
          "completed_at",
          "time_spent_minutes",
          "notes",
          "last_answer",
          "answer_score",
          "answer_feedback"
        ],
        "missing_columns": []
      },
      "public.ticket": {
        "exists": true,
        "expected_columns": [
          "id",
          "type",
          "summary",
          "description",
          "owner",
          "keywords"
        ],
        "actual_columns": [
          "id",
          "type",
          "time",
          "changetime",
          "component",
          "severity",
          "priority",
          "owner",
          "reporter",
          "cc",
          "version",
          "milestone",
          "status",
          "resolution",
          "summary",
          "description",
          "keywords"
        ],
        "missing_columns": []
      },
      "public.ticket_custom": {
        "exists": true,
        "expected_columns": [
          "ticket",
          "name",
          "value"
        ],
        "actual_columns": [
          "ticket",
          "name",
          "value"
        ],
        "missing_columns": []
      }
    },
    "missing_elements": [],
    "foreign_keys": [
      {
        "table_name": "concept_metadata",
        "column_name": "path_id",
        "foreign_table_name": "paths",
        "foreign_column_name": "id",
        "table_schema": "learning"
      }
    ]
  },
  "data_flow_simulation": {
    "vector_search_input": {
      "query": "computer science algorithms",
      "min_score": 0.65,
      "max_chunks": 5,
      "path_title": "CS Algorithms Learning Path",
      "difficulty_level": "intermediate"
    },
    "mock_neo4j_results": [
      {
        "id": "chunk_alg_001",
        "content": "Sorting algorithms including quicksort and mergesort implementations.",
        "subject": "Computer Science",
        "concept": "Sorting Algorithms",
        "score": 0.89,
        "has_prerequisite": null,
        "prerequisite_for": [
          "chunk_alg_002"
        ]
      },
      {
        "id": "chunk_alg_002",
        "content": "Binary search algorithm and its time complexity analysis.",
        "subject": "Computer Science",
        "concept": "Search Algorithms",
        "score": 0.85,
        "has_prerequisite": [
          "chunk_alg_001"
        ],
        "prerequisite_for": [
          "chunk_alg_003"
        ]
      }
    ],
    "api_processing_steps": [
      "1. Receive vector search request with query and parameters",
      "2. Generate embedding for search query using OpenAI",
      "3. Perform vector similarity search in Neo4j using GDS",
      "4. Transform chunk results to API format",
      "5. Create learning path record in learning.paths table",
      "6. For each chunk, create ticket in public.ticket table",
      "7. Insert concept metadata in learning.concept_metadata table",
      "8. Generate questions using LLM service",
      "9. Store custom fields in public.ticket_custom table",
      "10. Create prerequisite relationships in learning.prerequisites table",
      "11. Return learning path response with IDs and counts"
    ],
    "expected_database_changes": {
      "learning.paths": "+1 record",
      "public.ticket": "+N records (one per chunk)",
      "learning.concept_metadata": "+N records (one per chunk)",
      "public.ticket_custom": "+9N records (9 fields per chunk)",
      "learning.prerequisites": "+M records (based on prerequisite relationships)"
    },
    "api_response_format": {
      "path_id": "UUID string",
      "message": "Success message with counts",
      "ticket_count": "integer (number of concepts/tickets created)",
      "prerequisite_count": "integer (number of prerequisite relationships)"
    }
  },
  "sample_data_test": {
    "test_executed": true,
    "learning_path_created": true,
    "tickets_created": 3,
    "concept_metadata_created": 3,
    "custom_fields_created": 27,
    "test_data": {
      "learning_path": {
        "title": "Test Learning Path - Data Flow Verification",
        "query_text": "test query for data flow validation",
        "cognito_user_id": "test-user-12345",
        "total_chunks": 3,
        "question_difficulty": 3
      },
      "chunks": [
        {
          "id": "test_chunk_001",
          "content": "Introduction to algorithms and their complexity analysis.",
          "concept": "Algorithm Complexity",
          "subject": "Computer Science",
          "score": 0.85,
          "has_prerequisite": null,
          "prerequisite_for": [
            "test_chunk_002"
          ],
          "ticket_id": 81
        },
        {
          "id": "test_chunk_002",
          "content": "Graph algorithms including BFS and DFS traversal methods.",
          "concept": "Graph Algorithms",
          "subject": "Computer Science",
          "score": 0.92,
          "has_prerequisite": [
            "test_chunk_001"
          ],
          "prerequisite_for": [
            "test_chunk_003"
          ],
          "ticket_id": 82
        },
        {
          "id": "test_chunk_003",
          "content": "Dynamic programming techniques for optimization problems.",
          "concept": "Dynamic Programming",
          "subject": "Computer Science",
          "score": 0.88,
          "has_prerequisite": [
            "test_chunk_002"
          ],
          "prerequisite_for": null,
          "ticket_id": 83
        }
      ]
    },
    "path_id": "74ccb6d1-0d8a-4a80-a36b-f92b9f8c7b3e"
  },
  "errors": [],
  "current_data_state": {
    "learning.paths": 2,
    "learning.concept_metadata": 3,
    "learning.prerequisites": 2,
    "learning.progress": 0,
    "public.ticket": 3,
    "public.ticket_custom": 427,
    "recent_paths": [
      {
        "id": "74ccb6d1-0d8a-4a80-a36b-f92b9f8c7b3e",
        "title": "Test Learning Path - Data Flow Verification",
        "cognito_user_id": "test-user-12345",
        "created_at": "2025-07-28 01:07:14.756887",
        "total_chunks": 3
      },
      {
        "id": "af54c0ab-1d89-4def-b139-beaf3c9d6b5a",
        "title": "Test Path",
        "cognito_user_id": "test-user-123",
        "created_at": "2025-07-25 17:51:54.690078",
        "total_chunks": 0
      }
    ],
    "recent_learning_tickets": [
      {
        "id": 81,
        "summary": "Learn Algorithm Complexity",
        "owner": "test-user-12345",
        "time": null
      },
      {
        "id": 82,
        "summary": "Learn Graph Algorithms",
        "owner": "test-user-12345",
        "time": null
      },
      {
        "id": 83,
        "summary": "Learn Dynamic Programming",
        "owner": "test-user-12345",
        "time": null
      }
    ]
  }
}