events {
    worker_connections 1024;
}

http {
    upstream trac {
        server trac-legacy:8000;
    }

    upstream oauth2_proxy {
        server oauth2-proxy:4180;
    }

    server {
        listen 80;
        server_name localhost;

        # Protected location - requires authentication
        location /projects {
            auth_request /oauth2/auth;
            error_page 401 = /oauth2/sign_in;

            # Pass user info headers to Trac
            auth_request_set $user   $upstream_http_x_auth_request_user;
            auth_request_set $email  $upstream_http_x_auth_request_email;
            auth_request_set $auth_header $upstream_http_authorization;

            proxy_set_header X-User  $user;
            proxy_set_header X-Email $email;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            
            # Pass the access token to Trac
            proxy_set_header Authorization $auth_header;

            proxy_pass http://trac;
        }

        # OAuth2 proxy endpoints
        location /oauth2/ {
            proxy_pass       http://oauth2_proxy;
            proxy_set_header Host                    $host;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Scheme                $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
        }

        location = /oauth2/auth {
            proxy_pass       http://oauth2_proxy;
            proxy_set_header Host             $host;
            proxy_set_header X-Real-IP        $remote_addr;
            proxy_set_header X-Scheme         $scheme;
            proxy_set_header Content-Length   "";
            proxy_pass_request_body           off;
        }

        # Public endpoints (if any)
        location /health {
            return 200 "OK\n";
        }
    }
}